/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

/**
 *
 * @author Islam-Abdelrahman
 */
public class NewJFrametest extends JFrame implements ActionListener, NewJFrameInterface {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrametest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        LineTable = new JTable();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jLabel6 = new JLabel();
        jLabel7 = new JLabel();
        jLabel8 = new JLabel();
        jScrollPane2 = new JScrollPane();
        jTable2 = new JTable();
        createItemBtn = new java.awt.Button();
        deleteInvoicebtn = new JButton();
        SaveBtn = new JButton();
        CancelBtn = new JButton();
        jMenuBar1 = new JMenuBar();
        jMenu1 = new JMenu();
        jMenuItem1 = new JMenuItem();
        jMenuItem2 = new JMenuItem();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        LineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                    "Invoice Number", "Customer Name", "Invoice Date", "Invoice Total"
            }
        ));
        LineTable.setShowGrid(true);
        jScrollPane1.setViewportView(LineTable);

        jLabel1.setText("Invoice Number");

        jLabel2.setText("Customer Name");

        jLabel3.setText("Invoice Date");

        jLabel4.setText("Invoice Total");

        jLabel5.setText(".");
        jLabel5.setName("."); // NOI18N

        jLabel6.setText(",");

        jLabel7.setText(",");

        jLabel8.setText(",");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setShowGrid(true);
        jScrollPane2.setViewportView(jTable2);

        createItemBtn.setActionCommand("Create Invoice");
        createItemBtn.setBackground(new java.awt.Color(255, 255, 255));
        createItemBtn.setLabel("Create Invoice");
        createItemBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                createItemBtnActionPerformed(evt);
            }
        });

        deleteInvoicebtn.setText("Delete Invoice");

        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("Cancel");

        jMenu1.setText("File");

        jMenuItem1.setText("Load");

        jMenu1.add(jMenuItem1);
        jMenuItem1.addActionListener(this);//make this menu item reads file
        jMenuItem1.setActionCommand("loadFile");


        jMenuItem2.setText("Save");
        jMenu1.add(jMenuItem2);
        jMenuItem2.addActionListener(this);//make this menu item reads file
        jMenuItem1.setActionCommand("saveFile");

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 271, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(createItemBtn, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(deleteInvoicebtn)
                        .addGap(119, 119, 119)
                        .addComponent(SaveBtn)
                        .addGap(93, 93, 93)
                        .addComponent(CancelBtn)))
                .addContainerGap(169, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 22, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 182, GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 329, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteInvoicebtn)
                        .addComponent(SaveBtn)
                        .addComponent(CancelBtn))
                    .addComponent(createItemBtn, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );

        jLabel5.getAccessibleContext().setAccessibleName(".");
        createItemBtn.getAccessibleContext().setAccessibleName("Create Invoice");

        pack();
    }// </editor-fold>//GEN-END:initComponents



    @Override
public void ActionPerformed(ActionEvent e) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    switch (e.getActionCommand()){
        case "loadFile":
            jMenuItem1();

            break;

        case "saveFile":
            jMenuItem2();

            break;
    }

    }
    @Override
    public void jMenuItem1(){
        JFileChooser fc = new JFileChooser();
        int result =fc.showOpenDialog(this);
        if(result==JFileChooser.APPROVE_OPTION){
          String path =   fc.getSelectedFile().getPath();
            FileInputStream fis = null;
          try {
               fis = new FileInputStream(path);
              int size = fis.available();
              byte[] b = new byte[size];
              fis.read(b);
              AbstractButton ta = null;
              ta.setText(new String(b));


          } catch (FileNotFoundException e) {
                e.printStackTrace();
          }
          catch (IOException e) {
              e.printStackTrace();
          }finally {
              try {
                  fis.close();
              } catch (IOException e) {
              }
          }
          }
        }
    private void jMenuItem2(){

    }

    private void createItemBtnActionPerformed(ActionEvent e) {//GEN-FIRST:event_createItemBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_createItemBtnActionPerformed

    private void SaveBtnActionPerformed(ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {





        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrametest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrametest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrametest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrametest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrametest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton CancelBtn;
    private JTable LineTable;
    private JButton SaveBtn;
    private java.awt.Button createItemBtn;
    private JButton deleteInvoicebtn;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JMenu jMenu1;
    private JMenuBar jMenuBar1;
    private JMenuItem jMenuItem1;
    private JMenuItem jMenuItem2;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JTable jTable2;
    JTextArea ta;
    // End of variables declaration//GEN-END:variables


    //@Override
    public void actionPerformed(ActionEvent e) {
        switch (e.getActionCommand()){
            case  "load file" :

                break;

            case "save file":

                break;
        }
    }
    public void load(AbstractButton ta){
        JFileChooser fc = new JFileChooser();
        int result=  fc.showOpenDialog(this);
        if (result== JFileChooser.APPROVE_OPTION) {
            String path = fc.getSelectedFile().getPath();
            FileInputStream fis = null;
            try {
                fis = new FileInputStream(path);
                int size = fis.available();
                byte[] b = new byte[size];
                fis.read(b);
                ta.setText(new String(b));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }catch (IOException e){

                e.printStackTrace();
            }finally {
                try{ fis.close();}catch (IOException e){
                }


            }
        }

}
}
